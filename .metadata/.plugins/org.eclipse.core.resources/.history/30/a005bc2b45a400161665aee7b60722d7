package snake;

import java.util.ArrayList;

/**
 * 
 * @author Leonardo Chiriv√¨
 *
 */
public class Snake {

	public enum Directions { LEFT, RIGHT, DOWN, UP }
	private Directions direction;

	private ArrayList<SnakeTile> tiles = new ArrayList<SnakeTile>();

	private int SPEED = 10;

	public Snake() {
		direction = Directions.RIGHT;
		tiles.add(new SnakeTile(50, 50));
		tiles.add(new SnakeTile(40, 50));
		tiles.add(new SnakeTile(30, 50));
	}

	public void addTile() {
		int tailX = 0;
		int tailY = 0;
		switch (this.direction) {
		case LEFT:
			tailX = tiles.get(tiles.size()-1).getX() + 10;
			tailY = tiles.get(tiles.size()-1).getY();
			break;
		case RIGHT:
			tailX = tiles.get(tiles.size()-1).getX() - 10;
			tailY = tiles.get(tiles.size()-1).getY();
			break;
		case UP:
			tailX = tiles.get(tiles.size()-1).getX();
			tailY = tiles.get(tiles.size()-1).getY() + 10;
			break;
		case DOWN:
			tailX = tiles.get(tiles.size()-1).getX();
			tailY = tiles.get(tiles.size()-1).getY() - 10;
			break;
		}
		tiles.add(new SnakeTile(tailX, tailY));
	}

	public void update() {
		int prevX = tiles.get(0).getX();
		int prevY = tiles.get(0).getY();

		switch (this.direction) {
		case LEFT:
			tiles.get(0).moveX( -SPEED );
			break;
		case RIGHT:
			tiles.get(0).moveX( SPEED );
			break;
		case UP:
			tiles.get(0).moveY( -SPEED );
			break;
		case DOWN:
			tiles.get(0).moveY( SPEED );
			break;
		}

		int tempX, tempY;
		for(int i = 1; i < tiles.size(); i++){
			tempX = tiles.get(i).getX();
			tempY = tiles.get(i).getY();
			tiles.get(i).setX(prevX);
			tiles.get(i).setY(prevY);
			prevX = tempX;
			prevY = tempY;
		}
	}
	
	public boolean collideItSelf() {
		for( int i = tiles.size()-1; i > 0; i-- ){
			if( ( tiles.get(0).getX() == tiles.get(i).getX() ) && ( tiles.get(0).getY() == tiles.get(i).getY() ) )
				return true;
		}
		return false;
	}

	public SnakeTile getHead() {
		return tiles.get(0);
	}

	public Directions getDirection() {
		return this.direction;
	}

	public void setDirection( Directions direction ) {
		this.direction = direction;
	}

	public ArrayList<SnakeTile> getTiles() {
		return this.tiles;
	}
}
